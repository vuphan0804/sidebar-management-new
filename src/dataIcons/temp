function searchTree(treeData, matchingName, dataNew) {
  for (let index = 0; index < treeData?.length; index++) {
    let a = {};
    if (
      treeData[index].name.search(matchingName) >= 0 &&
      treeData[index].children.length === 0
    ) {
      treeData[index].title = (
        <div className="flex items-center justify-between">
          <div className="whitespace-nowrap bg-red-100">
            {treeData[index].name}
          </div>
          <div className="ml-10 text-sm">
            {treeData[index].isAddNodeChild ? (
              <button
                type="button"
                id="addChildEl"
                className="px-2 py-1 mx-2 ml-6 text-sky-400 border-2 border-sky-400 hover:text-white hover:bg-sky-500 hover:border-sky-500 rounded-full transition-primary"
                label="Add Child"
                onClick={() => handleOpenFormAddNodeChild(treeData[index].id)}
              >
                <i className="fa-solid fa-plus"></i>
              </button>
            ) : null}

            {treeData[index].isRemoveNode ? (
              <button
                type="button"
                id="deleteEl"
                className="px-2 py-1 mx-2 text-red-400 border-2 border-red-400 hover:text-white hover:bg-red-500 hover:border-red-500 rounded-full transition-primary"
                label="Delete"
                onClick={() => handleOpenFormDelete(treeData[index].id)}
              >
                <i className="fa-sharp fa-solid fa-trash"></i>
              </button>
            ) : null}

            {treeData[index].isInfoNode ? (
              <button
                type="button"
                className="px-2 py-1 mx-2 text-sky-400 border-2 border-sky-400 hover:text-white hover:bg-sky-500 hover:border-sky-500 rounded-full transition-primary"
                label="Alert"
                onClick={() => handleOpenPopupInfo(treeData[index].id)}
              >
                <i className="fa-sharp fa-solid fa-circle-info"></i>
              </button>
            ) : null}
          </div>
        </div>
      );
      a = treeData[index];
    }
    if (treeData[index].children.length > 0) {
      for (let i = 0; i < treeData[index]?.children.length; i++) {
        treeData[index].children = searchTree(
          treeData[index].children,
          matchingName,
          []
        );
      }
      if (treeData[index].children.length > 0)
        a.children = treeData[index].children;
    }
    dataNew.push(a);
  }
  return dataNew;
}
